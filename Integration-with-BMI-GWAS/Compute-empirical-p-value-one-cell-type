### Calculate empirical p-value of BMI GWAS association for one cell type ###

# Load packages
library(WGCNA)
library(reshape)
library(ggplot2)
library(reshape2)
library(plyr)


# Load data
WGCNA.path = "~/ygg-projects/mludwig/MAGMA/Data/WGCNA_AgRP_Campbell.csv"

# Path to null GWAS gene scores
GWAS.path <- "/projects/mludwig/MAGMA/Null_GWAS/out_dir/"


# Mapping files
mapping.human.entrez.ensembl.path <- "/projects/tp/tmp-bmi-brain/data/mapping/gene_annotation_hsapiens.txt.gz"
mapping.mouse.gene.human.ensembl.path <- "/projects/timshel/sc-genetics/sc-genetics/data/gene_annotations/Mus_musculus.GRCm38.90.gene_name_version2ensembl.txt.gz"
mapping.mouse.synonyms.human.ensembl.path <- "/data/genetic-mapping/ncbi/Mus_musculus.gene_info_symbol2ensembl.gz"
mapping.mouse.human.ensembl.path <- "/projects/timshel/sc-genetics/sc-genetics/data/gene_annotations/gene_annotation.hsapiens_mmusculus_unique_orthologs.GRCh37.ens_v91.txt.gz"



# Load module kME values
modulekME <- read.csv(WGCNA.path, row.names=1, check.names = FALSE, sep = ",")

# Load gene scores
GWAS.names <- dir(path = GWAS.path, pattern="[.]genes.out", recursive = T)

GWAS <- vector(mode="list")

for(i in 1:length(GWAS.names)) {
  GWAS[[i]] <- read.table(paste(GWAS.path, GWAS.names[[i]], sep = ""), head=T, check.names = FALSE)
}
names(GWAS) = gsub(".genes.out", "", GWAS.names)


# Mapping from human Entrez gene ID to human Ensembl gene IDs
mapping.human.entrez.ensembl <- read.csv(gzfile(mapping.human.entrez.ensembl.path), sep="\t", header=T)

# For all null GWASs
for(i in 1:length(GWAS)) {
  
  # Match Entrez gene ID in the two files 
  idx <- match(GWAS[[i]]$GENE, mapping.human.entrez.ensembl$entrezgene)
  mapping <- data.frame(entrez = GWAS[[i]]$GENE, ensembl = mapping.human.entrez.ensembl$ensembl_gene_id[idx])
  
  # Add Ensemble gene ID to GWAS study
  GWAS[[i]]$ENSEMBL = mapping$ensembl
}


# Mapping the WGCNA mouse genes to human Ensembl gene ID 
# Step 1: Direct mapping
mapping.mouse.gene.human.ensembl <- read.table(gzfile(mapping.mouse.gene.human.ensembl.path), sep = "\t", header=T)
mapping <- data.frame(symbol = rownames(modulekME), ensembl.mouse = mapping.mouse.gene.human.ensembl$ensembl_gene_id
                      [match(rownames(modulekME), mapping.mouse.gene.human.ensembl$gene_name_optimal)])

# Step 2: Map remaing genes using synonyms
mapping.mouse.synonyms.human.ensembl <- read.csv(gzfile(mapping.mouse.human.ensembl.path), sep="\t", header=T)
mapping$ensembl.mouse[which(is.na(mapping$ensembl.mouse))] <- mapping.mouse.synonyms.human.ensembl$ensembl[match(mapping$symbol[which(is.na(mapping$ensembl.mouse))], mapping.mouse.synonyms.human.ensembl$symbol)]


# Step 3: Mapping from mouse to human Ensembl gene ID
mapping.mouse.human.ensembl <- read.csv(gzfile(mapping.mouse.human.ensembl.path), sep="\t", header=T)
mapping$ensembl.human <- mapping.mouse.human.ensembl$ensembl_gene_id[match(mapping$ensembl.mouse, mapping.mouse.human.ensembl$mmusculus_homolog_ensembl_gene)]

# For duplicated Ensemble gene IDs, the kME values are averaged 
modulekME$ensembl <- mapping$ensembl.human
modulekME <- na.omit(modulekME)
tmp <- within(modulekME, rm("ensembl"))

modulekME.ens <- aggregate(tmp, by=list(modulekME$ensembl), FUN = mean, na.rm = TRUE)
rownames(modulekME.ens) = modulekME.ens$Group.1
modulekME.ens <- within(modulekME.ens, rm("Group.1"))

# Calculate Spearman's correlation between gene module kME value and GWAS gene significance
colors <- colnames(modulekME.ens)
kME.cor.p <- kME.cor.r <- matrix(NA, nrow = length(unique(colors)), ncol = length(GWAS))

rownames(kME.cor.r) = rownames(kME.cor.p) = unique(colors)
colnames(kME.cor.r) = colnames(kME.cor.p) = names(GWAS) 

# Loop over modules and null GWASs 
for(color in unique(colors)) {
  for(i in 1:length(GWAS)) {
    
    module <- color
    genes <- intersect(rownames(modulekME.ens), GWAS[[i]]$ENSEMBL)
    # Significance of genes found in modules
    x <- -log10(GWAS[[i]]$P[match(genes, GWAS[[i]]$ENSEMBL)])
    # kME value for genes in module
    y <- modulekME.ens[match(genes, rownames(modulekME.ens)), module]
    
    # Correlation
    cor <- cor.test(x, y, method="spearman", exact = F)
    kME.cor.r[color, i] <- cor$estimate
    kME.cor.p[color, i] <- cor$p.value
  }
}

BMI.GWAS.Q <- read.csv("~/ygg-projects/mludwig/MAGMA/Null_GWAS_WGCNA_data/Campbell_AgRP_Q.csv", 
                       row.names=1, check.names = FALSE, sep = ",")

data <- as.data.frame(kME.cor.p * sign(kME.cor.r))
data[data < 0] <- 1 # Only look for positive enrichment

data <- -log10(data)

empirical.p.value <- data.frame(matrix(NA, nrow = length(rownames(data)), ncol = 1))
rownames(empirical.p.value) <- rownames(data)
colnames(empirical.p.value) <- "p-value"

# Compute empirical p-value for each module
for (module in unique(rownames(data))) {
  i <- which(rownames(data) == module)
  null.gwas.p.values <- data[rownames(data) == module, ]
  
  empirical.p.value[i,] <- (sum(null.gwas.p.values > BMI.GWAS.Q[module, 1]) + 1) / (length(null.gwas.p.values) + 1)
}

# Adjust for multiple testing
empirical.q.value <- p.adjust(empirical.p.value[,1], method="fdr")
dim(empirical.q.value) <- dim(empirical.p.value)  
dimnames(empirical.q.value) <- dimnames(empirical.p.value)
empirical.q.value <- data.frame(empirical.q.value)
empirical.q.value

# Plot
colnames(empirical.q.value) <- "value"
empirical.q.value$value <- -log10(empirical.q.value$value) 
empirical.q.value$module <- gsub("ME", "", rownames(empirical.q.value))
empirical.q.value$variable <- ""

p <- ggplot(empirical.q.value, aes(x=variable, y=value, fill=module)) + 
  geom_bar(stat="identity", position=position_dodge(), color="black") +
  scale_fill_manual(values=sort(empirical.q.value$module)) + theme_classic() +
  geom_abline(intercept=-log10(0.05), slope = 0, lty=2) + ylim(0, 5) +
  labs(x="Modules found in Campbell et al. AgRP neurons", y=expression(-log[10](Q))) + 
  guides(fill=guide_legend(ncol=2, title="Module")) +
  theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), 
        axis.title=element_text(size=16)) 
ggsave(p, filename = "Results/AgRP_Campbell_BMI_Null_GWAS.pdf", width=10, height=5)
p

